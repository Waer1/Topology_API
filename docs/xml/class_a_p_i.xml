<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_a_p_i" kind="class" language="C++" prot="public">
    <compoundname>API</compoundname>
    <includes refid="_a_p_i_8h" local="no">API.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_a_p_i_1adb63c7166868fb7d32cd11d4a457701c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>API::API</definition>
        <argsstring>()</argsstring>
        <name>API</name>
        <qualifiedname>API::API</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="32" column="1" bodyfile="API.cpp" bodystart="3" bodyend="5"/>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1a0f97fcfa25c89c4aa9747b73016c30b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtopology" kindref="compound">topology</ref> *</type>
        <definition>topology * API::ReadJson</definition>
        <argsstring>(string FileName)</argsstring>
        <name>ReadJson</name>
        <qualifiedname>API::ReadJson</qualifiedname>
        <param>
          <type>string</type>
          <declname>FileName</declname>
        </param>
        <briefdescription>
<para>function used to create object from json file and check its empty or not and return pointer no null if object empty </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FileName</parametername>
</parameternamelist>
<parameterdescription>
<para>filename of json file prechecked on his validation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>topology * the topology object formed from json file (filename) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="40" column="10" bodyfile="API.cpp" bodystart="7" bodyend="21"/>
        <references refid="class_a_p_i_1adda7ba5369ee876f8c0ca8a355575235" compoundref="_a_p_i_8cpp" startline="24" endline="28">createTopology</references>
        <referencedby refid="class_controller_1af1ca88ffc1cbe7125c82d9e376998442" compoundref="_controller_8cpp" startline="68" endline="80">Controller::readJson</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1adda7ba5369ee876f8c0ca8a355575235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtopology" kindref="compound">topology</ref> *</type>
        <definition>topology * API::createTopology</definition>
        <argsstring>(json jsonObject)</argsstring>
        <name>createTopology</name>
        <qualifiedname>API::createTopology</qualifiedname>
        <param>
          <type>json</type>
          <declname>jsonObject</declname>
        </param>
        <briefdescription>
<para>Create a Topology object from json object passed to it by devide it to smaller task , each task create one list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonObject</parametername>
</parameternamelist>
<parameterdescription>
<para>json object from file name passed to readjson </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>topology * the topology object formed from json file (filename) and adding its id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="48" column="10" bodyfile="API.cpp" bodystart="24" bodyend="28"/>
        <references refid="class_a_p_i_1a0a62e19f264ac3a8af2a9acd30bf02f9" compoundref="_a_p_i_8cpp" startline="30" endline="36">createListOfDevices</references>
        <referencedby refid="class_a_p_i_1a0f97fcfa25c89c4aa9747b73016c30b4" compoundref="_a_p_i_8cpp" startline="7" endline="21">ReadJson</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1a0a62e19f264ac3a8af2a9acd30bf02f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="class_device" kindref="compound">Device</ref> * &gt;</type>
        <definition>vector&lt; Device * &gt; API::createListOfDevices</definition>
        <argsstring>(json jsonObject)</argsstring>
        <name>createListOfDevices</name>
        <qualifiedname>API::createListOfDevices</qualifiedname>
        <param>
          <type>json</type>
          <declname>jsonObject</declname>
        </param>
        <briefdescription>
<para>Create a List Of Devices object, by looping throught the lists exist in file and give each device to procude it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonObject</parametername>
</parameternamelist>
<parameterdescription>
<para>json object from file name passed to readjson </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vector&lt;Device*&gt; vector of pointers of devices in list </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="56" column="8" bodyfile="API.cpp" bodystart="30" bodyend="36"/>
        <references refid="class_a_p_i_1a5ca1e600b977a5c40e1614a1db03e929" compoundref="_a_p_i_8cpp" startline="38" endline="49">createDevice</references>
        <referencedby refid="class_a_p_i_1adda7ba5369ee876f8c0ca8a355575235" compoundref="_a_p_i_8cpp" startline="24" endline="28">createTopology</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1a5ca1e600b977a5c40e1614a1db03e929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_device" kindref="compound">Device</ref> *</type>
        <definition>Device * API::createDevice</definition>
        <argsstring>(const json &amp;DeviceJson)</argsstring>
        <name>createDevice</name>
        <qualifiedname>API::createDevice</qualifiedname>
        <param>
          <type>const json &amp;</type>
          <declname>DeviceJson</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="class_device" kindref="compound">Device</ref> object given from createListOfDevices by detect <ref refid="class_device" kindref="compound">Device</ref> type and all suitanle function for it&apos;s creation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DeviceJson</parametername>
</parameternamelist>
<parameterdescription>
<para>the device passed as json object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Device* pointer to <ref refid="class_device" kindref="compound">Device</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="64" column="8" bodyfile="API.cpp" bodystart="38" bodyend="49"/>
        <references refid="class_a_p_i_1a5992c29887197f77d9734de0bf19fe66" compoundref="_a_p_i_8cpp" startline="59" endline="66">createNmos</references>
        <references refid="class_a_p_i_1ab9103247deae2c7bc5b5e4026186aa92" compoundref="_a_p_i_8cpp" startline="68" endline="75">createPmos</references>
        <references refid="class_a_p_i_1abc509958a1b6399930d535f1ec7a80bd" compoundref="_a_p_i_8cpp" startline="50" endline="57">createResistor</references>
        <referencedby refid="class_a_p_i_1a0a62e19f264ac3a8af2a9acd30bf02f9" compoundref="_a_p_i_8cpp" startline="30" endline="36">createListOfDevices</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1a5992c29887197f77d9734de0bf19fe66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_device" kindref="compound">Device</ref> *</type>
        <definition>Device * API::createNmos</definition>
        <argsstring>(const json &amp;DeviceJson)</argsstring>
        <name>createNmos</name>
        <qualifiedname>API::createNmos</qualifiedname>
        <param>
          <type>const json &amp;</type>
          <declname>DeviceJson</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="class_nmos" kindref="compound">Nmos</ref> object , called if the device type is <ref refid="class_nmos" kindref="compound">Nmos</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DeviceJson</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="class_nmos" kindref="compound">Nmos</ref> passed as json object, with its specifications </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Device* pointer to <ref refid="class_device" kindref="compound">Device</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="72" column="8" bodyfile="API.cpp" bodystart="59" bodyend="66"/>
        <referencedby refid="class_a_p_i_1a5ca1e600b977a5c40e1614a1db03e929" compoundref="_a_p_i_8cpp" startline="38" endline="49">createDevice</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1ab9103247deae2c7bc5b5e4026186aa92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_device" kindref="compound">Device</ref> *</type>
        <definition>Device * API::createPmos</definition>
        <argsstring>(const json &amp;DeviceJson)</argsstring>
        <name>createPmos</name>
        <qualifiedname>API::createPmos</qualifiedname>
        <param>
          <type>const json &amp;</type>
          <declname>DeviceJson</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="class_nmos" kindref="compound">Nmos</ref> object , called if the device type is <ref refid="class_pmos" kindref="compound">Pmos</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DeviceJson</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="class_pmos" kindref="compound">Pmos</ref> passed as json object, with its specifications </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Device* pointer to <ref refid="class_device" kindref="compound">Device</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="80" column="8" bodyfile="API.cpp" bodystart="68" bodyend="75"/>
        <referencedby refid="class_a_p_i_1a5ca1e600b977a5c40e1614a1db03e929" compoundref="_a_p_i_8cpp" startline="38" endline="49">createDevice</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1abc509958a1b6399930d535f1ec7a80bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_device" kindref="compound">Device</ref> *</type>
        <definition>Device * API::createResistor</definition>
        <argsstring>(const json &amp;DeviceJson)</argsstring>
        <name>createResistor</name>
        <qualifiedname>API::createResistor</qualifiedname>
        <param>
          <type>const json &amp;</type>
          <declname>DeviceJson</declname>
        </param>
        <briefdescription>
<para>Create a Resistor object , called if the device type is Resistor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DeviceJson</parametername>
</parameternamelist>
<parameterdescription>
<para>the Resistor passed as json object, with its specifications </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Device* pointer to <ref refid="class_device" kindref="compound">Device</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="88" column="8" bodyfile="API.cpp" bodystart="50" bodyend="57"/>
        <referencedby refid="class_a_p_i_1a5ca1e600b977a5c40e1614a1db03e929" compoundref="_a_p_i_8cpp" startline="38" endline="49">createDevice</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1ae3bae133372ce4d900e2bc6f51807fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool API::writeToJSON</definition>
        <argsstring>(string filename, const topology *Topology)</argsstring>
        <name>writeToJSON</name>
        <qualifiedname>API::writeToJSON</qualifiedname>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const <ref refid="classtopology" kindref="compound">topology</ref> *</type>
          <declname>Topology</declname>
        </param>
        <briefdescription>
<para>function used to convert topology in memory to json file in a given json file name </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the file program will write on it </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Topology</parametername>
</parameternamelist>
<parameterdescription>
<para>the topology which will be printed in as json object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true is every thing done correctly </para>
</simplesect>
<simplesect kind="return"><para>false if throw any exepection from reading file or write on it </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="98" column="6" bodyfile="API.cpp" bodystart="80" bodyend="98"/>
        <references refid="class_a_p_i_1a7f4a57de2252eabfdc856490fa7dfc97" compoundref="_a_p_i_8cpp" startline="101" endline="105">ConvertTopologyTojson</references>
        <referencedby refid="class_controller_1a7744237c0146b480844fc39192ef43c2" compoundref="_controller_8cpp" startline="82" endline="90">Controller::WriteJson</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1a7f4a57de2252eabfdc856490fa7dfc97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>json</type>
        <definition>json API::ConvertTopologyTojson</definition>
        <argsstring>(const topology *topo)</argsstring>
        <name>ConvertTopologyTojson</name>
        <qualifiedname>API::ConvertTopologyTojson</qualifiedname>
        <param>
          <type>const <ref refid="classtopology" kindref="compound">topology</ref> *</type>
          <declname>topo</declname>
        </param>
        <briefdescription>
<para>convert the topology object to json object by divide it into smaller tasks. each task is convert <ref refid="class_device" kindref="compound">Device</ref> to separte json object </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>topo</parametername>
</parameternamelist>
<parameterdescription>
<para>json file to the topology program will convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>json </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="107" column="6" bodyfile="API.cpp" bodystart="101" bodyend="105"/>
        <references refid="class_a_p_i_1a0d5eec05898031c392aa4395778c7d4d" compoundref="_a_p_i_8cpp" startline="108" endline="116">ConvertDevicesToJson</references>
        <references refid="classtopology_1ab5b9447eb6f07912222e3e47e92dd1b7" compoundref="topology_8cpp" startline="45" endline="48">topology::getDevices</references>
        <references refid="classtopology_1a3a23246593d167560e4c06c5c3c6b37c" compoundref="topology_8cpp" startline="40" endline="43">topology::getID</references>
        <referencedby refid="class_a_p_i_1ae3bae133372ce4d900e2bc6f51807fd0" compoundref="_a_p_i_8cpp" startline="80" endline="98">writeToJSON</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1a0d5eec05898031c392aa4395778c7d4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>json</type>
        <definition>json API::ConvertDevicesToJson</definition>
        <argsstring>(const vector&lt; Device * &gt; &amp;Devices)</argsstring>
        <name>ConvertDevicesToJson</name>
        <qualifiedname>API::ConvertDevicesToJson</qualifiedname>
        <param>
          <type>const vector&lt; <ref refid="class_device" kindref="compound">Device</ref> * &gt; &amp;</type>
          <declname>Devices</declname>
        </param>
        <briefdescription>
<para>function usedto separte all devices in given topology into json files per device </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Deviceslist</parametername>
</parameternamelist>
<parameterdescription>
<para>of devices want to convert <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>json json file to the list of deviecs converted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="114" column="6" bodyfile="API.cpp" bodystart="108" bodyend="116"/>
        <references refid="class_a_p_i_1ac651532f8ec00c6cc1d810e9b130d79a" compoundref="_a_p_i_8cpp" startline="119" endline="130">ConvertDeviceToJson</references>
        <referencedby refid="class_a_p_i_1a7f4a57de2252eabfdc856490fa7dfc97" compoundref="_a_p_i_8cpp" startline="101" endline="105">ConvertTopologyTojson</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1ac651532f8ec00c6cc1d810e9b130d79a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>json</type>
        <definition>json API::ConvertDeviceToJson</definition>
        <argsstring>(Device *comp)</argsstring>
        <name>ConvertDeviceToJson</name>
        <qualifiedname>API::ConvertDeviceToJson</qualifiedname>
        <param>
          <type><ref refid="class_device" kindref="compound">Device</ref> *</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
<para>function convert device object into json onject </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comp</parametername>
</parameternamelist>
<parameterdescription>
<para>the object of device want to convert it </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>json json file of that device </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="122" column="6" bodyfile="API.cpp" bodystart="119" bodyend="130"/>
        <references refid="class_device_1a2c3041835f84c73c86149976f2c6f565" compoundref="_device_8cpp" startline="54" endline="57">Device::get_Default</references>
        <references refid="class_device_1acada68ab3f642242deb479ae553daae7" compoundref="_device_8cpp" startline="79" endline="82">Device::get_id</references>
        <references refid="class_device_1a751b026eebbf5cb268dc0e3aa7f145d7" compoundref="_device_8cpp" startline="59" endline="62">Device::get_max</references>
        <references refid="class_device_1a84b6c9c4b8cf7505c1e2441b16562661" compoundref="_device_8cpp" startline="69" endline="72">Device::get_min</references>
        <references refid="class_device_1a1d200a41b1a0b802997f984d50d543ef" compoundref="_device_8cpp" startline="64" endline="67">Device::get_netList</references>
        <references refid="class_device_1a2ac3ac9ed7a0de9f5f59ad5441eb1373" compoundref="_device_8cpp" startline="49" endline="52">Device::get_type</references>
        <referencedby refid="class_a_p_i_1a0d5eec05898031c392aa4395778c7d4d" compoundref="_a_p_i_8cpp" startline="108" endline="116">ConvertDevicesToJson</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1a583ec65b542b44e4b7013f5fc830fdcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>API::~API</definition>
        <argsstring>()</argsstring>
        <name>~API</name>
        <qualifiedname>API::~API</qualifiedname>
        <briefdescription>
<para>Destroy the <ref refid="class_a_p_i" kindref="compound">API</ref> object when end. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="128" column="1" bodyfile="API.cpp" bodystart="132" bodyend="134"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_a_p_i" kindref="compound">API</ref> is the class use to treat with json in write json file or read from json files. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="API.h" line="29" column="1" bodyfile="API.h" bodystart="30" bodyend="129"/>
    <listofallmembers>
      <member refid="class_a_p_i_1adb63c7166868fb7d32cd11d4a457701c" prot="public" virt="non-virtual"><scope>API</scope><name>API</name></member>
      <member refid="class_a_p_i_1a0d5eec05898031c392aa4395778c7d4d" prot="public" virt="non-virtual"><scope>API</scope><name>ConvertDevicesToJson</name></member>
      <member refid="class_a_p_i_1ac651532f8ec00c6cc1d810e9b130d79a" prot="public" virt="non-virtual"><scope>API</scope><name>ConvertDeviceToJson</name></member>
      <member refid="class_a_p_i_1a7f4a57de2252eabfdc856490fa7dfc97" prot="public" virt="non-virtual"><scope>API</scope><name>ConvertTopologyTojson</name></member>
      <member refid="class_a_p_i_1a5ca1e600b977a5c40e1614a1db03e929" prot="public" virt="non-virtual"><scope>API</scope><name>createDevice</name></member>
      <member refid="class_a_p_i_1a0a62e19f264ac3a8af2a9acd30bf02f9" prot="public" virt="non-virtual"><scope>API</scope><name>createListOfDevices</name></member>
      <member refid="class_a_p_i_1a5992c29887197f77d9734de0bf19fe66" prot="public" virt="non-virtual"><scope>API</scope><name>createNmos</name></member>
      <member refid="class_a_p_i_1ab9103247deae2c7bc5b5e4026186aa92" prot="public" virt="non-virtual"><scope>API</scope><name>createPmos</name></member>
      <member refid="class_a_p_i_1abc509958a1b6399930d535f1ec7a80bd" prot="public" virt="non-virtual"><scope>API</scope><name>createResistor</name></member>
      <member refid="class_a_p_i_1adda7ba5369ee876f8c0ca8a355575235" prot="public" virt="non-virtual"><scope>API</scope><name>createTopology</name></member>
      <member refid="class_a_p_i_1a0f97fcfa25c89c4aa9747b73016c30b4" prot="public" virt="non-virtual"><scope>API</scope><name>ReadJson</name></member>
      <member refid="class_a_p_i_1ae3bae133372ce4d900e2bc6f51807fd0" prot="public" virt="non-virtual"><scope>API</scope><name>writeToJSON</name></member>
      <member refid="class_a_p_i_1a583ec65b542b44e4b7013f5fc830fdcd" prot="public" virt="non-virtual"><scope>API</scope><name>~API</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
